
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.jacek-marchwicki.key-value-db'
version=project.ext.versionName

configurations {
    deployerJars
}

dependencies {
    compile project(":key-value-db")

    compile "javax.annotation:javax.annotation-api:1.2"
    compile "com.google.code.findbugs:jsr305:2.0.1"
    compile 'com.appunite:lib-leveldb-jni:0.0.5'

    androidTestCompile 'com.google.truth:truth:0.25'
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'

    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}

android {
    buildToolsVersion '26.0.0'
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 26
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "https://auto-close.appspot.com/maven/206") {
                authentication(userName: "un-important", password: project.ext.autoCloseToken)
            }
        }
    }
}