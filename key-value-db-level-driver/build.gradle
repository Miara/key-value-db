
apply plugin: 'com.android.library'

group='com.github.jacek-marchwicki.key-value-db'
version=project.ext.versionName

configurations {
    deployerJars
}

dependencies {
    api project(":key-value-db")

    api "javax.annotation:javax.annotation-api:1.2"
    api "com.google.code.findbugs:jsr305:3.0.2"

    implementation 'com.snappydb:snappydb-lib:0.5.2'
    implementation 'com.esotericsoftware.kryo:kryo:2.24.0'
    implementation 'com.google.guava:guava:30.1.1-android'

    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'

    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}

android {
    buildToolsVersion '29.0.3'
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

//TODO
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            configuration = configurations.deployerJars
//            repository(url: "https://auto-close.appspot.com/maven/206") {
//                authentication(userName: "un-important", password: project.ext.autoCloseToken)
//            }
//        }
//    }
//}